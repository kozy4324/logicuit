module Logicuit
  module Circuits
    module Combinational
      # FullAdder class
      class FullAdder4bit < DSL
        def cin: () -> Signals::Signal
        def a0: () -> Signals::Signal
        def b0: () -> Signals::Signal
        def a1: () -> Signals::Signal
        def b1: () -> Signals::Signal
        def a2: () -> Signals::Signal
        def b2: () -> Signals::Signal
        def a3: () -> Signals::Signal
        def b3: () -> Signals::Signal
        def s0: () -> Signals::Signal
        def s1: () -> Signals::Signal
        def s2: () -> Signals::Signal
        def s3: () -> Signals::Signal
        def c: () -> Signals::Signal
        class Struct
          attr_reader cin: bool
          attr_reader a0: bool
          attr_reader b0: bool
          attr_reader a1: bool
          attr_reader b1: bool
          attr_reader a2: bool
          attr_reader b2: bool
          attr_reader a3: bool
          attr_reader b3: bool
        end
        def self.outputs: (*Symbol args, **^() [self: Struct] -> bool kwargs) -> (nil | untyped)
        def self.assembling: () { () [self: instance] -> void } -> void
      end
    end
  end
end
