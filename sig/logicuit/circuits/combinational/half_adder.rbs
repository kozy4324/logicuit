module Logicuit
  module Circuits
    module Combinational
      # HalfAdder class
      class HalfAdder < DSL
        def a: () -> Signals::Signal
        def b: () -> Signals::Signal
        def c: () -> Signals::Signal
        def s: () -> Signals::Signal
        class Struct
          attr_reader a: bool
          attr_reader b: bool
        end
        def self.outputs: (*Symbol args, **^() [self: Struct] -> bool kwargs) -> void
        def self.assembling: () { () [self: instance] -> void } -> void
      end
    end
  end
end
