module Logicuit
  module Circuits
    module Sequential
      # Program Counter
      class ProgramCounter < DSL
        attr_reader a: Signals::Signal
        attr_reader b: Signals::Signal
        attr_reader c: Signals::Signal
        attr_reader d: Signals::Signal
        attr_reader ld: Signals::Signal
        attr_reader qa: Signals::Signal
        attr_reader qb: Signals::Signal
        attr_reader qc: Signals::Signal
        attr_reader qd: Signals::Signal
        class Struct
          attr_reader a: bool
          attr_reader b: bool
          attr_reader c: bool
          attr_reader d: bool
          attr_reader ld: bool
        end
        def self.outputs: (*Symbol args, **^() [self: Struct] -> bool kwargs) -> void
        def self.assembling: () { () [self: instance] -> void } -> void
      end
    end
  end
end
