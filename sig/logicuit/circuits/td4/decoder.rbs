module Logicuit
  module Circuits
    module Td4
      # Decoder class
      class Decoder < DSL
        def op3: () -> Signals::Signal
        def op2: () -> Signals::Signal
        def op1: () -> Signals::Signal
        def op0: () -> Signals::Signal
        def c_flag: () -> Signals::Signal
        def sel_b: () -> Signals::Signal
        def sel_a: () -> Signals::Signal
        def ld0: () -> Signals::Signal
        def ld1: () -> Signals::Signal
        def ld2: () -> Signals::Signal
        def ld3: () -> Signals::Signal
        class Struct
          attr_reader op3: bool
          attr_reader op2: bool
          attr_reader op1: bool
          attr_reader op0: bool
          attr_reader c_flag: bool
        end
        def self.outputs: (*Symbol args, **^() [self: Struct] -> bool kwargs) -> void
        def self.assembling: () { () [self: instance] -> void } -> void
      end
    end
  end
end
