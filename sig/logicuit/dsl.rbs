# Logicuit module
module Logicuit
  # base class for all gates and circuits
  class DSL
    def initialize: (*(0 | 1) args) -> void

    def evaluate: (*bool args) -> void

    attr_reader input_targets: Array[Symbol]

    attr_reader output_targets: Array[Symbol]

    attr_reader clock: bool

    attr_reader components: Array[untyped]

    attr_reader initialized: bool 

    def self.inputs: (*Symbol args, ?clock: Symbol) -> void

    def []: (*Symbol keys) -> Signals::SignalGroup

    def self.outputs: (*Symbol args, **(^() -> bool)kwargs) -> void

    def self.assembling: () { () -> void } -> void

    def self.diagram: (String source) -> void

    def self.truth_table: (String source) -> void

    def self.verify_against_truth_table: () -> void

    def self.run: (?hz: ::Integer, ?noclear: bool) -> void
  end
end
